{
  "address": "0x5c570C8604e351665090c6D1F44461A4A7Ca3416",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "campaginGoal",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "minContribution",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "Campagin__NotEnoughToWithdraw",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Campagin__NotOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Campagin__RequestIsUnderProcess",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Campagin__RequestRejected",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Campagin__SendMinFund",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Stake__DeadLineReached",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Stake__DeadlineNotReached",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "fundedAmount",
          "type": "uint256"
        }
      ],
      "name": "FundTransfered",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amountWithdrawed",
          "type": "uint256"
        }
      ],
      "name": "FundWithdrawed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "OwnershipTransfered",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "requestIndex",
          "type": "uint256"
        }
      ],
      "name": "RequestApplied",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "requestIndex",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "RequestResult",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "contribute",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "requestIndex",
          "type": "uint256"
        }
      ],
      "name": "executeResult",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getCampaginGoal",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getContributors",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "contributerAddress",
          "type": "address"
        }
      ],
      "name": "getContributorsFundAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getCurrentFundInContract",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "contributer",
          "type": "address"
        }
      ],
      "name": "getFundByAddress",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOwnerAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getTotalFund",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_durationOfRequest",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_withdrawAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_minContributionToVote",
          "type": "uint256"
        }
      ],
      "name": "makeRequest",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "s_contributerFund",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "transferOwnerShip",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "requestIndex",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "transactionHash": "0x5fc7663d2e8d2b23ce5590d9c0b7c91035505056cc75138b29ed027f062589f9",
  "receipt": {
    "to": null,
    "from": "0x918fd2c5991feAc1553DD783161eCA6E15b1AbcD",
    "contractAddress": "0x5c570C8604e351665090c6D1F44461A4A7Ca3416",
    "transactionIndex": 0,
    "gasUsed": "1100851",
    "logsBloom": "0x
    "blockHash": "0x878eea8d4117f9b2f778765df7b0fb120d73f6a4d54c6efe675e70d122b747ee",
    "transactionHash": "0x5fc7663d2e8d2b23ce5590d9c0b7c91035505056cc75138b29ed027f062589f9",
    "logs": [],
    "blockNumber": 489773,
    "cumulativeGasUsed": "1100851",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "200000000000000000000",
    "200000000000000000"
  ],
  "numDeployments": 1,
  "solcInputHash": "04e345f4abad68df4fd9143c93bd379d",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"campaginGoal\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minContribution\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"Campagin__NotEnoughToWithdraw\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Campagin__NotOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Campagin__RequestIsUnderProcess\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Campagin__RequestRejected\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Campagin__SendMinFund\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Stake__DeadLineReached\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Stake__DeadlineNotReached\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fundedAmount\",\"type\":\"uint256\"}],\"name\":\"FundTransfered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountWithdrawed\",\"type\":\"uint256\"}],\"name\":\"FundWithdrawed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"OwnershipTransfered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"requestIndex\",\"type\":\"uint256\"}],\"name\":\"RequestApplied\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"requestIndex\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"RequestResult\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"contribute\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"requestIndex\",\"type\":\"uint256\"}],\"name\":\"executeResult\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCampaginGoal\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getContributors\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"contributerAddress\",\"type\":\"address\"}],\"name\":\"getContributorsFundAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurrentFundInContract\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"contributer\",\"type\":\"address\"}],\"name\":\"getFundByAddress\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwnerAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTotalFund\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_durationOfRequest\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_withdrawAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_minContributionToVote\",\"type\":\"uint256\"}],\"name\":\"makeRequest\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"s_contributerFund\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"transferOwnerShip\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"requestIndex\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Campagin.sol\":\"Campagin\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Campagin.sol\":{\"content\":\"// // SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.8;\\n\\nimport \\\"./Stake.sol\\\";\\n\\nerror Campagin__SendMinFund();\\nerror Campagin__NotOwner();\\nerror Campagin__NotEnoughToWithdraw();\\nerror Campagin__RequestIsUnderProcess();\\nerror Campagin__RequestRejected();\\nerror Campagin__NotAnEligiableContributer();\\n\\ncontract Campagin is Stake {\\n    mapping(address => uint256) public s_contributerFund;\\n    uint256 private immutable i_campaginGoal;\\n    uint256 private immutable i_minContribution;\\n    uint256 private s_TotalFunded;\\n    address private s_owner;\\n    Request[] private s_requests;\\n    address[] private s_contributers;\\n\\n    event FundWithdrawed(uint256 amountWithdrawed);\\n    event OwnershipTransfered(address from, address to);\\n    event FundTransfered(address from, uint256 fundedAmount);\\n    event RequestApplied(uint256 requestIndex);\\n    event RequestResult(uint256 requestIndex, bool approved);\\n\\n    constructor(uint256 campaginGoal, uint256 minContribution) {\\n        i_campaginGoal = campaginGoal;\\n        i_minContribution = minContribution;\\n        s_owner = msg.sender;\\n    }\\n\\n    modifier onlyOwner() {\\n        if (msg.sender != s_owner) {\\n            revert Campagin__NotOwner();\\n        }\\n        _;\\n    }\\n\\n    modifier permissionIssued(uint256 requestIndex) {\\n        if (\\n            getPermissionStatus(s_requests[requestIndex]) ==\\n            withdrawLib.permission.PROCESSING\\n        ) {\\n            revert Campagin__RequestIsUnderProcess();\\n        }\\n        if (\\n            getPermissionStatus(s_requests[requestIndex]) ==\\n            withdrawLib.permission.REJECTED\\n        ) {\\n            revert Campagin__RequestRejected();\\n        }\\n        _;\\n    }\\n\\n    modifier onlyEligiableContributers(\\n        uint256 minContribution,\\n        address contributer\\n    ) {\\n        if (s_contributerFund[contributer] < minContribution) {\\n            revert Campagin__NotAnEligiableContributer();\\n        }\\n        _;\\n    }\\n\\n    function contribute() public payable {\\n        if (msg.value < i_minContribution) {\\n            revert Campagin__SendMinFund();\\n        }\\n        (bool send, ) = address(this).call{value: msg.value}(\\\"\\\");\\n\\n        emit FundTransfered(msg.sender, msg.value);\\n\\n        s_contributerFund[msg.sender] += msg.value;\\n        s_TotalFunded += msg.value;\\n        s_contributers.push(msg.sender);\\n    }\\n\\n    function withdraw(\\n        uint256 requestIndex\\n    ) public payable onlyOwner permissionIssued(requestIndex) {\\n        uint256 amount = getRequestedAmount(s_requests[requestIndex]);\\n        if (address(this).balance < amount) {\\n            revert Campagin__NotEnoughToWithdraw();\\n        }\\n        (bool sent, ) = s_owner.call{value: amount}(\\\"\\\");\\n        setRecieved(s_requests[requestIndex]);\\n        emit FundWithdrawed(amount);\\n    }\\n\\n    function makeRequest(\\n        uint256 _durationOfRequest,\\n        uint256 _withdrawAmount,\\n        uint256 _minContributionToVote\\n    ) public onlyOwner {\\n        // Stake happens here\\n\\n        Request storage request = s_requests.push();\\n        request.minContributionToVote = _minContributionToVote;\\n        request.durationOfRequest = _durationOfRequest;\\n        request.requestedAmount = _withdrawAmount;\\n        request.requestedTime = block.timestamp;\\n        request.totalAcceptVote = 0;\\n        request.totalRejectVote = 0;\\n        request.amountRecieved = false;\\n        request.currentStatus = withdrawLib.permission.PROCESSING;\\n        emit RequestApplied(s_requests.length);\\n    }\\n\\n    function stakeInRequest(\\n        uint256 requestId,\\n        withdrawLib.vote myVote\\n    ) internal {\\n        stake(s_requests[requestId], myVote);\\n    }\\n\\n    function executeResult(uint256 requestIndex) public {\\n        result(s_requests[requestIndex]);\\n\\n        emit RequestResult(\\n            requestIndex,\\n            getPermissionStatus(s_requests[requestIndex]) ==\\n                withdrawLib.permission.ACCEPTED\\n        );\\n    }\\n\\n    // Getter and setter functions\\n\\n    function getContributors() public view returns (address[] memory) {\\n        return s_contributers;\\n    }\\n\\n    function getTotalFund() public view returns (uint256) {\\n        return s_TotalFunded;\\n    }\\n\\n    function getFundByAddress(\\n        address contributer\\n    ) public view returns (uint256) {\\n        return s_contributerFund[contributer];\\n    }\\n\\n    function getOwnerAddress() public view returns (address) {\\n        return s_owner;\\n    }\\n\\n    function transferOwnerShip(address to) public onlyOwner {\\n        s_owner = to;\\n        emit OwnershipTransfered(msg.sender, to);\\n    }\\n\\n    function getCurrentFundInContract() public view returns (uint256) {\\n        return address(this).balance;\\n    }\\n\\n    function getContributorsFundAmount(\\n        address contributerAddress\\n    ) public view returns (uint256) {\\n        return s_contributerFund[contributerAddress];\\n    }\\n\\n    function getCampaginGoal() public view returns (uint256) {\\n        return i_campaginGoal;\\n    }\\n}\\n\",\"keccak256\":\"0xf65ba72f4991aa6c5e63e3d8dbeb1e987880476281f89d7518546eb7d0acf2b4\",\"license\":\"MIT\"},\"contracts/Library.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity ^0.8.8;\\r\\n\\r\\nlibrary withdrawLib {\\r\\n    enum permission {\\r\\n        PROCESSING,\\r\\n        ACCEPTED,\\r\\n        REJECTED\\r\\n    }\\r\\n\\r\\n    enum vote {\\r\\n        ACCEPT,\\r\\n        REJECT\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x31cac8062ae2e1e1c96dcfb290c1e87084dec16d35a15a4ac53b52de4a5656dd\",\"license\":\"MIT\"},\"contracts/Stake.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity ^0.8.8;\\r\\n\\r\\nimport \\\"./Library.sol\\\";\\r\\n\\r\\n// TO DO\\r\\n//\\r\\n// Start the stake event\\r\\n// contributers can vote\\r\\n// End the event\\r\\n// Send the result and withdraw if needed\\r\\n\\r\\nerror Stake__DeadlineNotReached();\\r\\nerror Stake__DeadLineReached();\\r\\n\\r\\ncontract Stake {\\r\\n    struct Request {\\r\\n        mapping(address => bool) contributersVoted;\\r\\n        uint256 minContributionToVote;\\r\\n        uint256 durationOfRequest;\\r\\n        uint256 requestedAmount;\\r\\n        uint256 requestedTime;\\r\\n        // Voting variables\\r\\n        uint256 totalAcceptVote;\\r\\n        uint256 totalRejectVote;\\r\\n        // status\\r\\n        withdrawLib.permission currentStatus;\\r\\n        bool amountRecieved;\\r\\n    }\\r\\n\\r\\n    modifier deadlineReached(Request storage request, bool requireReached) {\\r\\n        uint256 timeRemaining = timeLeft(request);\\r\\n        if (requireReached) {\\r\\n            if (timeRemaining > 0) {\\r\\n                revert Stake__DeadlineNotReached();\\r\\n            }\\r\\n            // require(timeRemaining == 0, \\\"Deadline has not reached\\\");\\r\\n        } else {\\r\\n            if (timeRemaining == 0) {\\r\\n                revert Stake__DeadLineReached();\\r\\n            }\\r\\n            // require(timeRemaining > 0, \\\"Deadline is already reached\\\");\\r\\n        }\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    // Add a modifier if all the contributers voted\\r\\n\\r\\n    function stake(\\r\\n        Request storage request,\\r\\n        withdrawLib.vote myVote\\r\\n    ) internal deadlineReached(request, false) {\\r\\n        if (myVote == withdrawLib.vote.ACCEPT) {\\r\\n            request.totalAcceptVote += 1;\\r\\n        } else {\\r\\n            request.totalRejectVote += 1;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    // Make a function that gets call for chainlink\\r\\n\\r\\n    function result(\\r\\n        Request storage request\\r\\n    ) internal deadlineReached(request, true) {\\r\\n        if (request.totalAcceptVote > request.totalRejectVote) {\\r\\n            request.currentStatus = withdrawLib.permission.ACCEPTED;\\r\\n        } else {\\r\\n            request.currentStatus = withdrawLib.permission.REJECTED;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function timeLeft(\\r\\n        Request storage request\\r\\n    ) internal view returns (uint256 timeleft) {\\r\\n        uint256 deadline = request.requestedTime + request.durationOfRequest;\\r\\n        if (block.timestamp >= deadline) {\\r\\n            return 0;\\r\\n        } else {\\r\\n            return deadline - block.timestamp;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function getCurrentStatus(\\r\\n        Request storage request\\r\\n    ) internal view returns (withdrawLib.permission) {\\r\\n        return request.currentStatus;\\r\\n    }\\r\\n\\r\\n    function getRequestedAmount(\\r\\n        Request storage request\\r\\n    ) internal view returns (uint256) {\\r\\n        return request.requestedAmount;\\r\\n    }\\r\\n\\r\\n    function setRecieved(Request storage request) internal {\\r\\n        request.amountRecieved = true;\\r\\n    }\\r\\n\\r\\n    function getMinimumContribution(\\r\\n        Request storage request\\r\\n    ) internal view returns (uint256) {\\r\\n        return request.minContributionToVote;\\r\\n    }\\r\\n\\r\\n    function getPermissionStatus(\\r\\n        Request storage request\\r\\n    ) internal view returns (withdrawLib.permission) {\\r\\n        return request.currentStatus;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x2b8e11410dd416e86a1611219b7e3a1510dd102f812fafd94a5974e22f7e427e\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x6080604052600436106100c25760003560e01c80637018a7af1161007f578063af157c1911610059578063af157c1914610247578063c7abca4714610272578063d7bb99ba146102af578063e4d89cf6146102b9576100c2565b80637018a7af146101ca5780638863dd1a146101f35780639fd813e31461021c576100c2565b806309d387da146100c75780630c4f65bd146100f25780632e1a7d4d1461011d578063352dcefe14610139578063466f8fd6146101625780634b73212b1461018d575b600080fd5b3480156100d357600080fd5b506100dc6102f6565b6040516100e99190610e26565b60405180910390f35b3480156100fe57600080fd5b506101076102fe565b6040516101149190610e82565b60405180910390f35b61013760048036038101906101329190610ece565b610328565b005b34801561014557600080fd5b50610160600480360381019061015b9190610efb565b61061a565b005b34801561016e57600080fd5b50610177610789565b6040516101849190610e26565b60405180910390f35b34801561019957600080fd5b506101b460048036038101906101af9190610f7a565b6107b1565b6040516101c19190610e26565b60405180910390f35b3480156101d657600080fd5b506101f160048036038101906101ec9190610ece565b6107f9565b005b3480156101ff57600080fd5b5061021a60048036038101906102159190610f7a565b6108af565b005b34801561022857600080fd5b506102316109b3565b60405161023e9190610e26565b60405180910390f35b34801561025357600080fd5b5061025c6109bd565b6040516102699190611065565b60405180910390f35b34801561027e57600080fd5b5061029960048036038101906102949190610f7a565b610a4b565b6040516102a69190610e26565b60405180910390f35b6102b7610a63565b005b3480156102c557600080fd5b506102e060048036038101906102db9190610f7a565b610c36565b6040516102ed9190610e26565b60405180910390f35b600047905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103af576040517fea1cacca00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80600060028111156103c4576103c3611087565b5b6103ee600383815481106103db576103da6110b6565b5b9060005260206000209060080201610c7e565b6002811115610400576103ff611087565b5b03610437576040517f797d189800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60028081111561044a57610449611087565b5b61047460038381548110610461576104606110b6565b5b9060005260206000209060080201610c7e565b600281111561048657610485611087565b5b036104bd576040517f81d2baa300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006104e9600384815481106104d6576104d56110b6565b5b9060005260206000209060080201610c99565b905080471015610525576040517f9d545da300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168260405161056d90611116565b60006040518083038185875af1925050503d80600081146105aa576040519150601f19603f3d011682016040523d82523d6000602084013e6105af565b606091505b505090506105dd600385815481106105ca576105c96110b6565b5b9060005260206000209060080201610ca7565b7f78607c3338a50a97f0960b9ebb80a74d63115b7f462a4ea45c55abb0e5a365638260405161060c9190610e26565b60405180910390a150505050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146106a1576040517fea1cacca00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600060036001816001815401808255809150500390600052602060002090600802019050818160010181905550838160020181905550828160030181905550428160040181905550600081600501819055506000816006018190555060008160070160016101000a81548160ff02191690831515021790555060008160070160006101000a81548160ff0219169083600281111561074257610741611087565b5b02179055507fa5f7f4c8f7ba98ee825a5d8b155830a9dd4e7d29fcc431c6c3bcce27776c278460038054905060405161077b9190610e26565b60405180910390a150505050565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b610823600382815481106108105761080f6110b6565b5b9060005260206000209060080201610cc7565b7f53d354f890b3877b85a588db153bbbce1a4b7c3fd4008a48294f78f13a13524a816001600281111561085957610858611087565b5b610883600385815481106108705761086f6110b6565b5b9060005260206000209060080201610c7e565b600281111561089557610894611087565b5b146040516108a4929190611146565b60405180910390a150565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610936576040517fea1cacca00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f0d18b5fd22306e373229b9439188228edca81207d1667f604daf6cef8aa3ee6733826040516109a892919061116f565b60405180910390a150565b6000600154905090565b60606004805480602002602001604051908101604052809291908181526020018280548015610a4157602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116109f7575b5050505050905090565b60006020528060005260406000206000915090505481565b7f0000000000000000000000000000000000000000000000000000000000000000341015610abd576040517fa1c9d8ae00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60003073ffffffffffffffffffffffffffffffffffffffff1634604051610ae390611116565b60006040518083038185875af1925050503d8060008114610b20576040519150601f19603f3d011682016040523d82523d6000602084013e610b25565b606091505b505090507f4a0f31347e3bcd7ca4807151e54057b91971fdf592fcd3056a22fa1236dea3a23334604051610b5a929190611198565b60405180910390a1346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610bb091906111f0565b925050819055503460016000828254610bc991906111f0565b925050819055506004339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60008160070160009054906101000a900460ff169050919050565b600081600301549050919050565b60018160070160016101000a81548160ff02191690831515021790555050565b8060016000610cd583610dce565b90508115610d1d576000811115610d18576040517f1638298000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610d58565b60008103610d57576040517fc1ae823a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5b836006015484600501541115610d9a5760018460070160006101000a81548160ff02191690836002811115610d9057610d8f611087565b5b0217905550610dc8565b60028460070160006101000a81548160ff02191690836002811115610dc257610dc1611087565b5b02179055505b50505050565b60008082600201548360040154610de591906111f0565b9050804210610df8576000915050610e08565b4281610e049190611224565b9150505b919050565b6000819050919050565b610e2081610e0d565b82525050565b6000602082019050610e3b6000830184610e17565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610e6c82610e41565b9050919050565b610e7c81610e61565b82525050565b6000602082019050610e976000830184610e73565b92915050565b600080fd5b610eab81610e0d565b8114610eb657600080fd5b50565b600081359050610ec881610ea2565b92915050565b600060208284031215610ee457610ee3610e9d565b5b6000610ef284828501610eb9565b91505092915050565b600080600060608486031215610f1457610f13610e9d565b5b6000610f2286828701610eb9565b9350506020610f3386828701610eb9565b9250506040610f4486828701610eb9565b9150509250925092565b610f5781610e61565b8114610f6257600080fd5b50565b600081359050610f7481610f4e565b92915050565b600060208284031215610f9057610f8f610e9d565b5b6000610f9e84828501610f65565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b610fdc81610e61565b82525050565b6000610fee8383610fd3565b60208301905092915050565b6000602082019050919050565b600061101282610fa7565b61101c8185610fb2565b935061102783610fc3565b8060005b8381101561105857815161103f8882610fe2565b975061104a83610ffa565b92505060018101905061102b565b5085935050505092915050565b6000602082019050818103600083015261107f8184611007565b905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600081905092915050565b50565b60006111006000836110e5565b915061110b826110f0565b600082019050919050565b6000611121826110f3565b9150819050919050565b60008115159050919050565b6111408161112b565b82525050565b600060408201905061115b6000830185610e17565b6111686020830184611137565b9392505050565b60006040820190506111846000830185610e73565b6111916020830184610e73565b9392505050565b60006040820190506111ad6000830185610e73565b6111ba6020830184610e17565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006111fb82610e0d565b915061120683610e0d565b925082820190508082111561121e5761121d6111c1565b5b92915050565b600061122f82610e0d565b915061123a83610e0d565b9250828203905081811115611252576112516111c1565b5b9291505056fea2646970667358221220505e887f3d958b0ce786ad3f5728a098d1b8bd0fae179fe659524e9cafb1946064736f6c63430008110033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 20,
        "contract": "contracts/Campagin.sol:Campagin",
        "label": "s_contributerFund",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 26,
        "contract": "contracts/Campagin.sol:Campagin",
        "label": "s_TotalFunded",
        "offset": 0,
        "slot": "1",
        "type": "t_uint256"
      },
      {
        "astId": 28,
        "contract": "contracts/Campagin.sol:Campagin",
        "label": "s_owner",
        "offset": 0,
        "slot": "2",
        "type": "t_address"
      },
      {
        "astId": 32,
        "contract": "contracts/Campagin.sol:Campagin",
        "label": "s_requests",
        "offset": 0,
        "slot": "3",
        "type": "t_array(t_struct(Request)505_storage)dyn_storage"
      },
      {
        "astId": 35,
        "contract": "contracts/Campagin.sol:Campagin",
        "label": "s_contributers",
        "offset": 0,
        "slot": "4",
        "type": "t_array(t_address)dyn_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_array(t_struct(Request)505_storage)dyn_storage": {
        "base": "t_struct(Request)505_storage",
        "encoding": "dynamic_array",
        "label": "struct Stake.Request[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_enum(permission)472": {
        "encoding": "inplace",
        "label": "enum withdrawLib.permission",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_struct(Request)505_storage": {
        "encoding": "inplace",
        "label": "struct Stake.Request",
        "members": [
          {
            "astId": 487,
            "contract": "contracts/Campagin.sol:Campagin",
            "label": "contributersVoted",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_address,t_bool)"
          },
          {
            "astId": 489,
            "contract": "contracts/Campagin.sol:Campagin",
            "label": "minContributionToVote",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 491,
            "contract": "contracts/Campagin.sol:Campagin",
            "label": "durationOfRequest",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 493,
            "contract": "contracts/Campagin.sol:Campagin",
            "label": "requestedAmount",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 495,
            "contract": "contracts/Campagin.sol:Campagin",
            "label": "requestedTime",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256"
          },
          {
            "astId": 497,
            "contract": "contracts/Campagin.sol:Campagin",
            "label": "totalAcceptVote",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256"
          },
          {
            "astId": 499,
            "contract": "contracts/Campagin.sol:Campagin",
            "label": "totalRejectVote",
            "offset": 0,
            "slot": "6",
            "type": "t_uint256"
          },
          {
            "astId": 502,
            "contract": "contracts/Campagin.sol:Campagin",
            "label": "currentStatus",
            "offset": 0,
            "slot": "7",
            "type": "t_enum(permission)472"
          },
          {
            "astId": 504,
            "contract": "contracts/Campagin.sol:Campagin",
            "label": "amountRecieved",
            "offset": 1,
            "slot": "7",
            "type": "t_bool"
          }
        ],
        "numberOfBytes": "256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}